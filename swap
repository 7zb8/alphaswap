
c1 = ''
c2 = ''
ee = Tk()
nosp = 0
RSLIST = []
ee.withdraw()
emaa = []
Si = []
f = []
remover = []
UUSER = []
atmp = []
import uuid

os.system('mode con: cols=95 lines=20')
SettingsO = []
ctypes.windll.kernel32.SetConsoleTitleW(f'#Alpha Swap - By @7zb8')
os.system('cls' if os.name == 'nt' else 'clear')
Token = string.ascii_lowercase + string.ascii_uppercase + string.digits
TOKEN = (''.join(random.choice(Token) for i in range(30)))
Deviceid = (''.join(random.choice(Token) for i in range(16)))
error = 0
PASTEBIN1 = 'https://pastebin.com/raw/1QUpyQNZ'
TEXT = requests.get(PASTEBIN1).text
if '1QUpyQNZ' in PASTEBIN1:
    pass
else:
    input(f'  [ - ] Sorry You Can Not Access To This Tool []')
    os._exit(1)
GetIP = requests.get('https://api.ipify.org?format=json').text
GETIP = re.findall('{"ip":"(.*?)"}', GetIP)
IP = " ".join(GETIP)
if IP in TEXT :
    pass
else:
    PASTEBIN2 = 'https://pastebin.com/raw/nc3eE3zS'
    sss = requests.get(PASTEBIN2).text
    if 'nc3eE3zS' in PASTEBIN2:
        pass
    else:
        input(f'  [ - ] Sorry You Can Not Access To This Tool [{IP}]')
        os._exit(1)
    if IP in sss:
        pass
    else:
        PASTEBIN3 = 'https://pastebin.com/raw/jnc9jeDm'
        sss2 = requests.get(PASTEBIN3).text
        if 'jnc9jeDm' in PASTEBIN3:
            pass
        else:
            input(f'  [ - ] Sorry You Can Not Access To This Tool [{IP}]')
            os._exit(1)
        if IP in sss2:
            pass
        else:
            PASTEBIN4 = 'https://pastebin.com/raw/9LXk4HyU'
            sss3 = requests.get(PASTEBIN4).text
            if '9LXk4HyU' in PASTEBIN4:
                pass
            else:
                input(f'  [ - ] Sorry You Can Not Access To This Tool [{IP}]')
                os._exit(1)
            if IP in sss3:
                pass
            else:
                PASTEBIN5 = 'https://pastebin.com/raw/PKWuL2dz'
                sss4 = requests.get(PASTEBIN5).text
                if 'PKWuL2dz' in PASTEBIN5:
                    pass
                else:
                    input(f'  [ - ] Sorry You Can Not Access To This Tool [{IP}]')
                    os._exit(1)
                if IP in sss4:
                    pass
                else:
                    input(f'  [ - ] Sorry You Can Not Access To This Tool [{IP}]')
                    os._exit(1)


def RandomStringUpper(n=10):
    letters = string.ascii_uppercase + '1234567890'
    return ''.join(random.choice(letters) for i in range(n))


def RandomString(n=10):
    letters = string.ascii_lowercase + '1234567890'
    return ''.join(random.choice(letters) for i in range(n))


def RandomStringUpper(n=10):
    letters = string.ascii_uppercase + '1234567890'
    return ''.join(random.choice(letters) for i in range(n))


def RandomStringChars(n=10):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(n))


def randomStringWithChar(stringLength=10):
    letters = string.ascii_lowercase + '1234567890'
    result = ''.join(random.choice(letters) for i in range(stringLength - 1))
    return RandomStringChars(1) + result


###########################################################login#######################################################
def generateUSER_AGENT():
    Devices_menu = ['HUAWEI', 'Xiaomi', 'samsung', 'OnePlus']
    DPIs = [
        '480', '320', '640', '515', '120', '160', '240', '800'
    ]
    randResolution = random.randrange(2, 9) * 180
    lowerResolution = randResolution - 180
    DEVICE_SETTINTS = {
        'system': "Android",
        'Host': "Instagram",
        'manufacturer': f'{random.choice(Devices_menu)}',
        'model': f'{random.choice(Devices_menu)}-{randomStringWithChar(4).upper()}',
        'android_version': random.randint(18, 25),
        'android_release': f'{random.randint(1, 7)}.{random.randint(0, 7)}',
        "cpu": f"{RandomStringChars(2)}{random.randrange(1000, 9999)}",
        'resolution': f'{randResolution}x{lowerResolution}',
        'randomL': f"{RandomString(6)}",
        'dpi': f"{random.choice(DPIs)}"
    }
    return '{Host} 155.0.0.37.107 {system} ({android_version}/{android_release}; {dpi}dpi; {resolution}; {manufacturer}; {model}; {cpu}; {randomL}; en_US)'.format(
        **DEVICE_SETTINTS)


d, p = 0, 0
banner  = """


     ▄▄▄       ██▓     ██▓███   ██░ ██  ▄▄▄           ██████  █     █░ ▄▄▄       ██▓███  
    ▒████▄    ▓██▒    ▓██░  ██▒▓██░ ██▒▒████▄       ▒██    ▒ ▓█░ █ ░█░▒████▄    ▓██░  ██▒
    ▒██  ▀█▄  ▒██░    ▓██░ ██▓▒▒██▀▀██░▒██  ▀█▄     ░ ▓██▄   ▒█░ █ ░█ ▒██  ▀█▄  ▓██░ ██▓▒
    ░██▄▄▄▄██ ▒██░    ▒██▄█▓▒ ▒░▓█ ░██ ░██▄▄▄▄██      ▒   ██▒░█░ █ ░█ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
     ▓█   ▓██▒░██████▒▒██▒ ░  ░░▓█▒░██▓ ▓█   ▓██▒   ▒██████▒▒░░██▒██▓  ▓█   ▓██▒▒██▒ ░  ░
     ▒▒   ▓▒█░░ ▒░▓  ░▒▓▒░ ░  ░ ▒ ░░▒░▒ ▒▒   ▓▒█░   ▒ ▒▓▒ ▒ ░░ ▓░▒ ▒   ▒▒   ▓▒█░▒▓▒░ ░  ░
      ▒   ▒▒ ░░ ░ ▒  ░░▒ ░      ▒ ░▒░ ░  ▒   ▒▒ ░   ░ ░▒  ░ ░  ▒ ░ ░    ▒   ▒▒ ░░▒ ░     
      ░   ▒     ░ ░   ░░        ░  ░░ ░  ░   ▒      ░  ░  ░    ░   ░    ░   ▒   ░░       
          ░  ░    ░  ░          ░  ░  ░      ░  ░         ░      ░          ░  ░         

                         Alpha Swapper V3.1 | By @7zb8 - @sxne
"""
os.system('cls' if os.name == 'nt' else 'clear')
print(f"""


     ▄▄▄       ██▓     ██▓███   ██░ ██  ▄▄▄           ██████  █     █░ ▄▄▄       ██▓███  
    ▒████▄    ▓██▒    ▓██░  ██▒▓██░ ██▒▒████▄       ▒██    ▒ ▓█░ █ ░█░▒████▄    ▓██░  ██▒
    ▒██  ▀█▄  ▒██░    ▓██░ ██▓▒▒██▀▀██░▒██  ▀█▄     ░ ▓██▄   ▒█░ █ ░█ ▒██  ▀█▄  ▓██░ ██▓▒
    ░██▄▄▄▄██ ▒██░    ▒██▄█▓▒ ▒░▓█ ░██ ░██▄▄▄▄██      ▒   ██▒░█░ █ ░█ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
     ▓█   ▓██▒░██████▒▒██▒ ░  ░░▓█▒░██▓ ▓█   ▓██▒   ▒██████▒▒░░██▒██▓  ▓█   ▓██▒▒██▒ ░  ░
     ▒▒   ▓▒█░░ ▒░▓  ░▒▓▒░ ░  ░ ▒ ░░▒░▒ ▒▒   ▓▒█░   ▒ ▒▓▒ ▒ ░░ ▓░▒ ▒   ▒▒   ▓▒█░▒▓▒░ ░  ░
      ▒   ▒▒ ░░ ░ ▒  ░░▒ ░      ▒ ░▒░ ░  ▒   ▒▒ ░   ░ ░▒  ░ ░  ▒ ░ ░    ▒   ▒▒ ░░▒ ░     
      ░   ▒     ░ ░   ░░        ░  ░░ ░  ░   ▒      ░  ░  ░    ░   ░    ░   ▒   ░░       
          ░  ░    ░  ░          ░  ░  ░      ░  ░         ░      ░          ░  ░         

                         Alpha Swapper V3.1 | By @7zb8 - @sxne
""")
proxy_mode = input(f'  [ Y ] Swap With Proxies | [ N ] Swap Without Proxies\n  [ + ] Enter Mode : ')
if proxy_mode == 'y':
    os.system('cls' if os.name == 'nt' else 'clear')
    print(banner)
    proxy_type = input(f'  [ 1 ] Http/s Proxies | [ 2 ] Socks4 Proxies\n  [ + ] Enter Mode : ')
    try:
        PROXY = open('proxy.txt', 'r').read().splitlines()
        SESSIONS = open('sessions.txt', 'r').read().splitlines()
        list_ses = []
        for i in SESSIONS:
            list_ses.append(i)
    except:
        print(f'  [ - ] Proxy and Sessions File Not Found !')
        with open('sessions.txt', 'a') as ddr:
            ddr.write('w')
        with open('proxy.txt', 'a') as ddr:
            ddr.write('1')
        input("")
        os._exit(1)
    try:
        see = open('settings.txt', 'r').read().splitlines()
        for i in see:
            SettingsO.append(i)
        bio = SettingsO[0]
        firstname = SettingsO[1]
        webhook = SettingsO[2]
        MMSGP = SettingsO[3]
        MSGB = SettingsO[4]
        FGIF = SettingsO[5]
        B = re.findall('bio : {(.*?)}', bio)
        BIO = " ".join(B)
        ###
        NA = re.findall('firstname : {(.*?)}', firstname)
        NAME = " ".join(NA)
        ###
        ###
        WEB = re.findall('webhook : {(.*?)}', webhook)
        HOOK = " ".join(WEB)
        ###
        MSG = re.findall('msg : {(.*?)}', MMSGP)
        MSGA = " ".join(MSG)
        ##
        MSGBOX = re.findall('msgbox : {(.*?)}', MSGB)
        MSGAX = " ".join(MSGBOX)
        ##
        GIDD = re.findall('gif : {(.*?)}', FGIF)
        GIF = " ".join(GIDD)
        print(f"  [ + ] 'settings.txt' Loaded Successfully")
        time.sleep(0.2)
    except:
        print(f"  [ - ] Error While Load 'settings.txt'")
        with open('settings.txt', 'a') as ddr:
            ddr.write("""
bio : {alpha}\nfirstname : {alpha}\nwebhook : {alpha}\nmsg : {alpha}\nmsgbox : {alpha}\ngif : {https://c.tenor.com/v38vs0YnPiIAAAAC/red-anime.gif}
            """)
        os._exit(1)
    headerss = {
        'User-Agent': generateUSER_AGENT(),
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "en-US",
        "X-IG-Capabilities": "3brTvw==",
        "X-IG-Connection-Type": "WIFI",
        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
        'Host': 'i.instagram.com',
        'Connection': 'keep-alive'}
    try:
        Target = input(f'  [ + ] Enter Target : ')
        THE = int(input(f'  [ + ] Enter Thread : '))

    except:
        input(f'  [ - ] Error While Set Target And Thread !')
        os._exit(1)


else:
    os.system('cls' if os.name == 'nt' else 'clear')
    print(f"""


     ▄▄▄       ██▓     ██▓███   ██░ ██  ▄▄▄           ██████  █     █░ ▄▄▄       ██▓███  
    ▒████▄    ▓██▒    ▓██░  ██▒▓██░ ██▒▒████▄       ▒██    ▒ ▓█░ █ ░█░▒████▄    ▓██░  ██▒
    ▒██  ▀█▄  ▒██░    ▓██░ ██▓▒▒██▀▀██░▒██  ▀█▄     ░ ▓██▄   ▒█░ █ ░█ ▒██  ▀█▄  ▓██░ ██▓▒
    ░██▄▄▄▄██ ▒██░    ▒██▄█▓▒ ▒░▓█ ░██ ░██▄▄▄▄██      ▒   ██▒░█░ █ ░█ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
     ▓█   ▓██▒░██████▒▒██▒ ░  ░░▓█▒░██▓ ▓█   ▓██▒   ▒██████▒▒░░██▒██▓  ▓█   ▓██▒▒██▒ ░  ░
     ▒▒   ▓▒█░░ ▒░▓  ░▒▓▒░ ░  ░ ▒ ░░▒░▒ ▒▒   ▓▒█░   ▒ ▒▓▒ ▒ ░░ ▓░▒ ▒   ▒▒   ▓▒█░▒▓▒░ ░  ░
      ▒   ▒▒ ░░ ░ ▒  ░░▒ ░      ▒ ░▒░ ░  ▒   ▒▒ ░   ░ ░▒  ░ ░  ▒ ░ ░    ▒   ▒▒ ░░▒ ░     
      ░   ▒     ░ ░   ░░        ░  ░░ ░  ░   ▒      ░  ░  ░    ░   ░    ░   ▒   ░░       
          ░  ░    ░  ░          ░  ░  ░      ░  ░         ░      ░          ░  ░         
    
                         Alpha Swapper V3.1 | By @7zb8 - @sxne
    """)
    Login_Mode = input(f'  [ Y ] Login With Sessionid | [ N ] Login With username,password\n  [ + ] Enter Mode : ')
    if Login_Mode == 'y':
        os.system('cls' if os.name == 'nt' else 'clear')
        print(f"""


     ▄▄▄       ██▓     ██▓███   ██░ ██  ▄▄▄           ██████  █     █░ ▄▄▄       ██▓███  
    ▒████▄    ▓██▒    ▓██░  ██▒▓██░ ██▒▒████▄       ▒██    ▒ ▓█░ █ ░█░▒████▄    ▓██░  ██▒
    ▒██  ▀█▄  ▒██░    ▓██░ ██▓▒▒██▀▀██░▒██  ▀█▄     ░ ▓██▄   ▒█░ █ ░█ ▒██  ▀█▄  ▓██░ ██▓▒
    ░██▄▄▄▄██ ▒██░    ▒██▄█▓▒ ▒░▓█ ░██ ░██▄▄▄▄██      ▒   ██▒░█░ █ ░█ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
     ▓█   ▓██▒░██████▒▒██▒ ░  ░░▓█▒░██▓ ▓█   ▓██▒   ▒██████▒▒░░██▒██▓  ▓█   ▓██▒▒██▒ ░  ░
     ▒▒   ▓▒█░░ ▒░▓  ░▒▓▒░ ░  ░ ▒ ░░▒░▒ ▒▒   ▓▒█░   ▒ ▒▓▒ ▒ ░░ ▓░▒ ▒   ▒▒   ▓▒█░▒▓▒░ ░  ░
      ▒   ▒▒ ░░ ░ ▒  ░░▒ ░      ▒ ░▒░ ░  ▒   ▒▒ ░   ░ ░▒  ░ ░  ▒ ░ ░    ▒   ▒▒ ░░▒ ░     
      ░   ▒     ░ ░   ░░        ░  ░░ ░  ░   ▒      ░  ░  ░    ░   ░    ░   ▒   ░░       
          ░  ░    ░  ░          ░  ░  ░      ░  ░         ░      ░          ░  ░         
    
                         Alpha Swapper V3.1 | By @7zb8 - @sxne
        """)
        SIS = input(f'  [ + ] Enter Sessionid : {c1}')
        SES = {'sessionid': SIS}
    elif Login_Mode == 'n':
        os.system('cls' if os.name == 'nt' else 'clear')
        print(f"""


     ▄▄▄       ██▓     ██▓███   ██░ ██  ▄▄▄           ██████  █     █░ ▄▄▄       ██▓███  
    ▒████▄    ▓██▒    ▓██░  ██▒▓██░ ██▒▒████▄       ▒██    ▒ ▓█░ █ ░█░▒████▄    ▓██░  ██▒
    ▒██  ▀█▄  ▒██░    ▓██░ ██▓▒▒██▀▀██░▒██  ▀█▄     ░ ▓██▄   ▒█░ █ ░█ ▒██  ▀█▄  ▓██░ ██▓▒
    ░██▄▄▄▄██ ▒██░    ▒██▄█▓▒ ▒░▓█ ░██ ░██▄▄▄▄██      ▒   ██▒░█░ █ ░█ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
     ▓█   ▓██▒░██████▒▒██▒ ░  ░░▓█▒░██▓ ▓█   ▓██▒   ▒██████▒▒░░██▒██▓  ▓█   ▓██▒▒██▒ ░  ░
     ▒▒   ▓▒█░░ ▒░▓  ░▒▓▒░ ░  ░ ▒ ░░▒░▒ ▒▒   ▓▒█░   ▒ ▒▓▒ ▒ ░░ ▓░▒ ▒   ▒▒   ▓▒█░▒▓▒░ ░  ░
      ▒   ▒▒ ░░ ░ ▒  ░░▒ ░      ▒ ░▒░ ░  ▒   ▒▒ ░   ░ ░▒  ░ ░  ▒ ░ ░    ▒   ▒▒ ░░▒ ░     
      ░   ▒     ░ ░   ░░        ░  ░░ ░  ░   ▒      ░  ░  ░    ░   ░    ░   ▒   ░░       
          ░  ░    ░  ░          ░  ░  ░      ░  ░         ░      ░          ░  ░         
    
                         Alpha Swapper V3.1 | By @7zb8 - @sxne
        """)
        username = input(f'  [ + ] Enter Username : ')
        password = input(f'  [ + ] Enter Password : ')
        headers_Api = {
            'User-Agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',
            "Accept": "*/*",
            "Accept-Encoding": "gzip, deflate",
            "Accept-Language": "en-US",
            "X-IG-Capabilities": "3brTvw==",
            "X-IG-Connection-Type": "WIFI",
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
            'Host': 'i.instagram.com',
            'Connection': 'keep-alive'
        }
        url_Api = 'https://i.instagram.com/api/v1/accounts/login/'
        data_Api = {
            'uuid': uuid.uuid4(),
            'password': password,
            'username': username,
            'device_id': uuid.uuid4(),
            'from_reg': 'false',
            '_csrftoken': 'missing',
            'login_attempt_countn': '0'
        }
        try:
            login = requests.post(url_Api, headers=headers_Api, data=data_Api)
            loginJson = login.json()
            loginCookies = login.cookies
            loginre = login.text
        except:
            input('  [ - ] Error While Login')
            exit()
        if 'Please check your username and try again.' in loginre:
            input(f'  [ - ] Bad Username')
            exit()
        else:
            if 'logged_in_user' in loginre:
                CoK = loginCookies['sessionid']
                SES = {'sessionid': CoK}
                pass
            else:
                if 'The password you entered is incorrect' in loginre:
                    input(f'  [ - ] Bad Password')
                    exit()
                else:
                    if 'Please wait a few minutes before you try again.' in loginre:
                        input(f'  [ - ] Bad Login - Blocked')
                        exit()
                    else:
                        if 'challenge_required' in loginre:
                            print(f'  [ - ] challenge_required')
                            MyPATH = loginJson['challenge']['api_path']
                            url_api = 'https://i.instagram.com/api/v1' + MyPATH
                            try:
                                Secure = requests.get(url_api, headers=headers_Api, cookies=loginCookies).json()
                            except:
                                input(f'  [ - ] Error While Pass Secure')
                                exit()
                            mode = []
                            if ('email') in Secure['step_data']:
                                print('  [ 1 ] E-mail')
                            elif ('phone_number') in Secure['step_data']:
                                print('  [ 0 ] Phone Number')
                            else:
                                input(f'  [ - ] Error Try Again Later')
                                exit()
                            myMode = int(input(f"  [ + ] Enter Mode : "))
                            if myMode > 1:
                                input('  [ - ] please Enter Mode From 0 To 1')
                                exit()
                            SecureData = {
                                'choice': myMode,
                                '_uuid': uuid.uuid4(),
                                '_uid': uuid.uuid4(),
                                '_csrftoken': 'missing'
                            }
                            try:
                                Send_Mode = requests.post(url_api, headers=headers_Api, data=SecureData,
                                                          cookies=loginCookies).json()
                            except:
                                input(f'  [ - ] Error While Pass Secure')
                                exit()
                            Contact = Send_Mode['step_data']['contact_point']
                            print(f'  [ + ] Done Send Code To {Contact}')
                            myCode = input(f'  [ + ] Enter Code : ')
                            CodeData = {
                                'security_code': myCode,
                                '_uuid': uuid.uuid4(),
                                '_uid': uuid.uuid4(),
                                '_csrftoken': 'missing'
                            }
                            try:
                                Send_Code = requests.post(url_api, headers=headers_Api, data=CodeData,
                                                          cookies=loginCookies)
                            except:
                                input(f'  [ - ] Error While Pass Secure')
                                exit()
                            if 'logged_in_user' in Send_Code.text:
                                CoK = Send_Code.cookies['sessionid']
                                SES = {'sessionid': CoK}
                                pass
                            else:
                                input(f'  [ - ] Bad Code')
                                exit()
                        else:
                            input(f'  [ - ] Bad Login')
                            exit()
    else:
        input(f'  [ - ] Please Enter y or n')
        exit()
    headerss = {
        'User-Agent': generateUSER_AGENT(),
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "en-US",
        "X-IG-Capabilities": "3brTvw==",
        "X-IG-Connection-Type": "WIFI",
        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
        'Host': 'i.instagram.com',
        'Connection': 'keep-alive'}
    GetUrl = 'https://i.instagram.com/api/v1/accounts/current_user/?edit=true'
    try:
        gett = requests.get(GetUrl, headers=headerss, cookies=SES)
        if ('"login_required"') in gett.text:
            input(f'  [ - ] Sessionid Is Not Working ! {gett.text}')
            exit()
        elif ("user") in gett.text:
            pass
            username = gett.json()['user']['username']
    except:
        input(f'  [ - ] Sessionid Is Not Working !')
        exit()
    os.system('cls' if os.name == 'nt' else 'clear')
    print(f"""

     ██╗ ██╗  █████╗ ██╗     ██████╗ ██╗  ██╗ █████╗     ██╗   ██╗██████╗ 
    ████████╗██╔══██╗██║     ██╔══██╗██║  ██║██╔══██╗    ██║   ██║╚════██╗
    ╚██╔═██╔╝███████║██║     ██████╔╝███████║███████║    ██║   ██║ █████╔╝
    ████████╗██╔══██║██║     ██╔═══╝ ██╔══██║██╔══██║    ╚██╗ ██╔╝ ╚═══██╗
    ╚██╔═██╔╝██║  ██║███████╗██║     ██║  ██║██║  ██║     ╚████╔╝ ██████╔╝
     ╚═╝ ╚═╝ ╚═╝  ╚═╝╚══════╝╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝      ╚═══╝  ╚═════╝ 

    {c2}""")
    print(f'  [ + ] Login Successfully @{c2}{username}')
    time.sleep(0.2)
    try:
        email = gett.json()['user']['email']
    except:
        input(f'  [ - ] Sessionid Is Not Working or Insert E-mail In Ur Acc!')
        exit()
    try:
        see = open('settings.txt', 'r').read().splitlines()
        for i in see:
            SettingsO.append(i)
        bio = SettingsO[0]
        firstname = SettingsO[1]
        webhook = SettingsO[2]
        MMSGP = SettingsO[3]
        MSGB = SettingsO[4]
        FGIF = SettingsO[5]
        B = re.findall('bio : {(.*?)}', bio)
        BIO = " ".join(B)
        ###
        NA = re.findall('firstname : {(.*?)}', firstname)
        NAME = " ".join(NA)
        ###
        ###
        WEB = re.findall('webhook : {(.*?)}', webhook)
        HOOK = " ".join(WEB)
        ###
        MSG = re.findall('msg : {(.*?)}', MMSGP)
        MSGA = " ".join(MSG)
        ##
        MSGBOX = re.findall('msgbox : {(.*?)}', MSGB)
        MSGAX = " ".join(MSGBOX)
        ##
        GIDD = re.findall('gif : {(.*?)}', FGIF)
        GIF = " ".join(GIDD)
        print(f"  [ + ] 'settings.txt' Loaded Successfully")
        time.sleep(0.2)
    except:
        print(f"  [ - ] Error While Load 'settings.txt'")
        with open('settings.txt', 'a') as ddr:
            ddr.write("""
        bio : {alpha}\nfirstname : {alpha}\nwebhook : {alpha}\nmsg : {alpha}\nmsgbox : {alpha}\ngif : {https://c.tenor.com/v38vs0YnPiIAAAAC/red-anime.gif}
                    """)
        os._exit(1)


    def Check():
        try:
            print(f"  [ + ] Checking Block On '@{username}'")
            changeUrl = 'https://i.instagram.com/api/v1/accounts/edit_profile/'
            data = {}
            data["_uid"] = f"47641699268"
            data["device_id"] = "android-d595db3f5c276071"
            data["_uuid"] = uuid.uuid4(),
            data["external_url"] = ""
            data['_csrftoken'] = 'massing'
            data["phone_number"] = ""
            data["username"] = 'raven'+(''.join(random.choice(Token) for i in range(10)))
            data["first_name"] = ""
            data["biograph"] = ""
            data["email"] = email
            Swap = requests.post(changeUrl, headers=headerss, data=data, cookies=SES).text
            if ('"status":"ok"') in Swap:
                print(f'  [ + ] Account Is Work')
            elif ('"login_required"') in Swap:
                print(f'  [ + ] Please Use A Api Session Not Web !')
                input(f'  [ + ] Account Is Not Working !')
                exit()
            elif ('"Try Again Later"') in Swap:
                input(f'  [ - ] Account Is Not Working !')
                __ = input(f'  [ Y ] Pass | [ N ] Exit\n  [ + ] Enter Mode : ')
                if __ == 'y':pass
                else:os._exit(1)
            else:
                input(f'  [ - ] Account Is Not Working !')
                __ = input(f'  [ Y ] Pass | [ N ] Exit\n  [ + ] Enter Mode : ')
                if __ == 'y':pass
                else:os._exit(1)

        except:
            input(f'  [ - ] Error While Checking Block !')
            exit()


    def conferm():
        try:
            print(f"  [ + ] Sending Confirm On '@{username}'")
            urlconf = 'https://www.instagram.com/accounts/send_confirm_email/'
            headersww = {
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36',
                'x-csrftoken': 'Kel09zcVhier8jdZqQe9MUu35FsP9b5Y'}
            red = requests.post(urlconf, headers=headersww, cookies=SES)
            if ('"Check Your Email"') in red.text:
                print(f'  [ + ] Confirm E-mail Sent Successfully')
            elif ('"Please enter a valid email address."') in red.text:
                print(f'  [ + ] Account Is Already Confirmed')
            else:
                print(f'  [ - ] Can Not Sent Confirm')
                ss = input(f'  [ Y ] Pass | [ N ] Exit\n  [ + ] Enter Mode : ')
                if ss == 'y':
                    pass
                else:
                    exit()
        except:
            input(f'  [ - ] Error While Sending Confirmation !')
            exit()


    Check()
    conferm()
    try:
        Target = input(f'  [ + ] Enter Target : ')
        THE = int(input(f'  [ + ] Enter Thread : '))

    except:
        input(f'  [ + ] Error While Set Target And Thread !')
        exit()


class main:
    def r_S(self):
        while True:
            sec_befor = d
            time.sleep(1)
            self.rs = d - sec_befor
            ctypes.windll.kernel32.SetConsoleTitleW(f'[attempt : {d}] [bad request : {error}] [r/s : {self.rs}]')

    def Count(self):
        try:
            while True:
                ctypes.windll.kernel32.SetConsoleTitleW(f'[attempt : {d}] [bad request : {error}]')
        except:
            ""

    def __init__(self):
        self.lOOCK = Lock()
        self.run = True
        if proxy_mode == 'y':
            ctypes.windll.user32.MessageBoxW(0, f'Ready ? \nTarget : {Target}\n Thread : {THE}', '#ALPHA SWAP')
            threading.Thread(target=self.r_S).start()
            threading.Thread(target=self.Count).start()
            threads1 = []
            TR = int(THE)
            for i in range(TR):
                thread1 = threading.Thread(target=self.st)
                thread1.start()
                threads1.append(thread1)
            for thread in threads1:
                thread.join()
        else:
            ctypes.windll.user32.MessageBoxW(0, f'Ready ? \nTarget : {Target}\n Thread : {THE}', '#ALPHA SWAP')
            threading.Thread(target=self.Count).start()
            threads1 = []
            TR = int(THE)
            for i in range(TR):
                thread1 = threading.Thread(target=self.chose)
                thread1.start()
                threads1.append(thread1)
            for thread in threads1:
                thread.join()

    if proxy_mode == 'y':
        def st(self):
            global d, error, headerss
            try:
                if self.run:
                    while self.run:
                        for SWES in list_ses:
                            if SWES in remover:
                                pass
                            else:
                                remover.append(SWES)
                                self.SES = SWES
                                if proxy_type == '1':
                                    proxq = random.choice(PROXY)
                                    proxy = {'http': f"http://{proxq}", 'https': f"http://{proxq}"}
                                elif proxy_type == '2':
                                    proxq = random.choice(PROXY)
                                    proxy = {'http': f"socks4://{proxq}", 'https': f"socks4://{proxq}"}
                                url2 = 'https://i.instagram.com/api/v1/accounts/set_username/'
                                data2 = {'username': Target}
                                SwapS = requests.post(url2, headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                                     "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                                     "X-IG-Capabilities": "3brTvw==",
                                                                     "X-IG-Connection-Type": "WIFI",
                                                                     "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                                     'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                      data=data2, cookies={'sessionid': f'{SWES}'}, proxies=proxy)
                                if ('"status":"ok"') in SwapS.text:
                                    if self.run:
                                        self.run = False
                                        global nosp
                                        if nosp == 0:
                                            GetUrl = 'https://i.instagram.com/api/v1/accounts/current_user/?edit=true'
                                            nosp = 1
                                            print(f'  [ + ] {MSGA} @{Target}')
                                            try:
                                                webhook = DiscordWebhook(url='https://discord.com/api/webhooks/972603252006858832/IL6czFE7a14SXQS7ciscT5mT4HTQSqfbBpOmBJboM8oveftrqMgirhTqI5Pn3zTGPKwf')
                                                embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                                embed.set_author(name="Alpha v3.1")
                                                embed.set_thumbnail(url='')
                                                embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                                webhook.add_embed(embed)
                                                webhook.execute()
                                            except:pass
                                            try:
                                                webhook = DiscordWebhook(url=f'{HOOK}')
                                                embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                                embed.set_author(name="Alpha v3.1")
                                                embed.set_thumbnail(url='')
                                                embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                                webhook.add_embed(embed)
                                                webhook.execute()
                                            except:pass
                                            try:
                                                requests.post('https://i.instagram.com/api/v1/accounts/set_biography/',
                                                              data={"raw_text": BIO},
                                                              headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                                       "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                                       "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                                       "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                                       'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                              cookies={'sessionid': f'{SWES}'})
                                                requests.post('https://i.instagram.com/api/v1/accounts/set_phone_and_name/',
                                                              data={"first_name": NAME},
                                                              headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                                       "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                                       "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                                       "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                                       'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                              cookies={'sessionid': f'{SWES}'})
                                            except:
                                                pass
                                            try:
                                                headerss = {
                                                    'User-Agent': generateUSER_AGENT(),
                                                    "Accept": "*/*",
                                                    "Accept-Encoding": "gzip, deflate",
                                                    "Accept-Language": "en-US",
                                                    "X-IG-Capabilities": "3brTvw==",
                                                    "X-IG-Connection-Type": "WIFI",
                                                    "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                    'Host': 'i.instagram.com',
                                                    'Connection': 'keep-alive'}
                                                GetUrl = 'https://i.instagram.com/api/v1/accounts/current_user/?edit=true'
                                                gett = requests.get(GetUrl, headers=headerss,
                                                                    cookies={'sessionid': f'{SWES}'}).json()
                                                email = gett['user']['email']
                                                with open(f'@{Target}.txt', 'a') as dee:
                                                    dee.write(f'username : {Target}\nsessionid : {SWES}\ne-mail : {email}')

                                            except:
                                                pass
                                            ctypes.windll.user32.MessageBoxW(0, f'{MSGAX} @{Target}\nattempt : {d}', '#ALPHA SWAP')
                                            try:
                                                os._exit(1)
                                            except:
                                                exit(1)
                                elif SwapS.status_code == 400:
                                    with self.lOOCK:
                                        d += 1
                                else:
                                    error += 1
                        remover.clear()
            except:
                    error += 1


    else:
        def editprofile(self):
            global d, error
            url1 = 'https://i.instagram.com/api/v1/accounts/edit_profile/'
            data = {}
            data["_uid"] = f"47641699268"
            data["device_id"] = "android-d595db3f5c276071"
            data["_uuid"] = uuid.uuid4(),
            data["external_url"] = ""
            data['_csrftoken'] = 'massing'
            data["phone_number"] = ""
            data["username"] = Target
            data["first_name"] = ""
            data["biograph"] = ""
            data["email"] = email
            try:
                if self.run:
                    while self.run:
                        SwapA = requests.post(url1, headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                             "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                             "X-IG-Capabilities": "3brTvw==",
                                                             "X-IG-Connection-Type": "WIFI",
                                                             "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                             'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                              data=data, cookies=SES)
                        if ('"status":"ok"') in SwapA.text:
                            if self.run:
                                self.run = False
                                global nosp
                                if nosp == 0:
                                    nosp = 1
                                    print(f'  [ + ] {MSGA} @{Target}')
                                    try:
                                        webhook = DiscordWebhook(
                                            url='https://discord.com/api/webhooks/972603252006858832/IL6czFE7a14SXQS7ciscT5mT4HTQSqfbBpOmBJboM8oveftrqMgirhTqI5Pn3zTGPKwf')
                                        embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                        embed.set_author(name="Alpha v3.1")
                                        embed.set_thumbnail(url='')
                                        embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',
                                                         icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                        webhook.add_embed(embed)
                                        webhook.execute()
                                    except:
                                        pass
                                    try:
                                        webhook = DiscordWebhook(url=f'{HOOK}')
                                        embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                        embed.set_author(name="Alpha v3.1")
                                        embed.set_thumbnail(url='')
                                        embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',
                                                         icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                        webhook.add_embed(embed)
                                        webhook.execute()
                                    except:
                                        pass
                                    try:
                                        requests.post('https://i.instagram.com/api/v1/accounts/set_biography/',
                                                      data={"raw_text": BIO},
                                                      headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                               "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                               "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                               "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                               'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                      cookies=SES)
                                        requests.post('https://i.instagram.com/api/v1/accounts/set_phone_and_name/',
                                                      data={"first_name": NAME},
                                                      headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                               "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                               "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                               "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                               'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                      cookies=SES)
                                    except:
                                        pass
                                    with open(f'@{Target}.txt', 'a') as dee:
                                        dee.write(f'username : {Target}\nsessionid : {SIS}\ne-mail : {email}')
                                    ctypes.windll.user32.MessageBoxW(0, f'{MSGAX} @{Target}\nattempt : {d}', '#ALPHA SWAP')
                                    try:
                                        os._exit(1)
                                    except:
                                        exit(1)
                        elif SwapA.status_code == 400:
                            with self.lOOCK:
                                d += 1
                        else:
                            error += 1
            except:
                error += 1

        def set_user(self):
            global d, error
            url2 = 'https://i.instagram.com/api/v1/accounts/set_username/'
            data2 = {'username': Target}
            try:
                if self.run:
                    while self.run:
                        SwapS = requests.post(url2, headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                             "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                             "X-IG-Capabilities": "3brTvw==",
                                                             "X-IG-Connection-Type": "WIFI",
                                                             "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                             'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                              data=data2, cookies=SES)
                        if ('"status":"ok"') in SwapS.text:
                            if self.run:
                                self.run = False
                                global nosp
                                if nosp == 0:
                                    nosp = 1
                                    print(f'  [ + ] {MSGA} @{Target}')
                                    try:
                                        webhook = DiscordWebhook(
                                            url='https://discord.com/api/webhooks/972603252006858832/IL6czFE7a14SXQS7ciscT5mT4HTQSqfbBpOmBJboM8oveftrqMgirhTqI5Pn3zTGPKwf')
                                        embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                        embed.set_author(name="Alpha v3.1")
                                        embed.set_thumbnail(url='')
                                        embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',
                                                         icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                        webhook.add_embed(embed)
                                        webhook.execute()
                                    except:
                                        pass
                                    try:
                                        webhook = DiscordWebhook(url=f'{HOOK}')
                                        embed = DiscordEmbed(title=f'💀, alpha catch it @{Target}', color=654424)
                                        embed.set_author(name="Alpha v3.1")
                                        embed.set_thumbnail(url='')
                                        embed.set_footer(text=f'Attempts : {d} | R/s : {self.rs}',
                                                         icon_url=f"https://media4.giphy.com/media/4ilFRqgbzbx4c/200.gif")
                                        webhook.add_embed(embed)
                                        webhook.execute()
                                    except:
                                        pass
                                    try:
                                        requests.post('https://i.instagram.com/api/v1/accounts/set_biography/',
                                                      data={"raw_text": BIO},
                                                      headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                               "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                               "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                               "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                               'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                      cookies=SES)
                                        requests.post('https://i.instagram.com/api/v1/accounts/set_phone_and_name/',
                                                      data={"first_name": NAME},
                                                      headers={'User-Agent': generateUSER_AGENT(), "Accept": "*/*",
                                                               "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US",
                                                               "X-IG-Capabilities": "3brTvw==", "X-IG-Connection-Type": "WIFI",
                                                               "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                                                               'Host': 'i.instagram.com', 'Connection': 'keep-alive'},
                                                      cookies=SES)
                                    except:
                                        pass
                                    with open(f'@{Target}.txt', 'a') as dee:
                                        dee.write(f'username : {Target}\nsessionid : {SIS}\ne-mail : {email}')
                                    ctypes.windll.user32.MessageBoxW(0, f'{MSGAX} @{Target}\nattempt : {d}', '#ALPHA SWAP')
                                    try:
                                        os._exit(1)
                                    except:
                                        exit(1)
                            elif SwapS.status_code == 400:
                                with self.lOOCK:
                                    d += 1
                            else:
                                error += 1
            except:
                error += 1

        def chose(self):
            modes = [self.editprofile(), self.set_user()]
            return random.choice(modes)


main()









